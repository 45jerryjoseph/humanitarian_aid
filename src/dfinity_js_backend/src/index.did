service: () -> {
    acceptDeliveryTender: (text) -> (variant {Ok:record {id:text; additionalCost:nat64; tenderDescription:text; warehouseManagerId:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addAdminItem: (text, text) -> (variant {Ok:record {id:text; status:text; company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; pickedUpItems:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; owner:principal; organisationItems:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; role:text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addCompleteItemsDistributionToDistributorCompany: (text, text) -> (variant {Ok:record {id:text; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; completeItemsDistribution:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addDriverIdToDeliveryDetails: (text, text) -> (variant {Ok:record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addDriverToDistributorCompany: (text, text) -> (variant {Ok:record {id:text; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; completeItemsDistribution:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addItemsSuccesfulWarehousing: (text, text) -> (variant {Ok:record {id:text; status:text; company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; itemSuccesfullWarehoused:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; owner:principal; role:text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addPackagedDetailsToItem: (text, record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}) -> (variant {Ok:record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addPickedUpItem: (text, text) -> (variant {Ok:record {id:text; status:text; company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; pickedUpItems:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; owner:principal; organisationItems:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; role:text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addQualification: (text, text) -> (variant {Ok:record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addVehicleToDistributorCompany: (text, text) -> (variant {Ok:record {id:text; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; completeItemsDistribution:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    assignVehicle: (text, text) -> (variant {Ok:record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    checkIfItemPickedUp: (text) -> (variant {Ok:bool; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    completeAdminPayment: (principal, text, nat64, nat64, nat64) -> (variant {Ok:record {status:text; memo:nat64; ProcessorId:text; price:nat64; warehouseReciever:principal; paid_at_block:opt nat64; adminPayer:principal}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    completeDistributorPayment: (principal, text, nat64, nat64, nat64) -> (variant {Ok:record {status:text; distributorReciever:principal; memo:nat64; ProcessorId:text; price:nat64; processorPayer:principal; paid_at_block:opt nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    completeDriverPayment: (principal, text, nat64, nat64, nat64) -> (variant {Ok:record {status:text; memo:nat64; driverReciever:principal; DistributorId:text; price:nat64; paid_at_block:opt nat64; distributorPayer:principal}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createAdmin: (record {company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; fullName:text; contact_info:record {email:text; address:text; phone:text}}) -> (variant {Ok:record {id:text; status:text; company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; pickedUpItems:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; owner:principal; organisationItems:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; role:text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createAdminProcessingAdvert: (record {itemId:text; warehouseManagerId:text; quantity:nat64; adminId:text; price:nat64}) -> (variant {Ok:record {id:text; status:text; itemId:text; warehouseManagerId:text; adminPaid:bool; quantity:nat64; adminId:text; price:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createDeliveryDetails: (record {itemId:text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text}) -> (variant {Ok:record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createDeliveryTender: (record {additionalCost:nat64; tenderDescription:text; warehouseManagerId:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; costPerWeight:nat64; tenderTitle:text}) -> (variant {Ok:record {id:text; additionalCost:nat64; tenderDescription:text; warehouseManagerId:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createDistributorsCompany: (record {YearsInOperation:text; logo:text; name:text; email:text; marketCoverage:text; address:text; phone:text; regNo:text; bussinessType:text}) -> (variant {Ok:record {id:text; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; completeItemsDistribution:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createDriver: (record {contact:text; fullName:text; experience:text; licenseNo:text; licenseExpiry:text}) -> (variant {Ok:record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createFieldWorker: (record {status:text; associated_driver:opt text; fullName:text; contact_info:record {email:text; address:text; phone:text}}) -> (variant {Ok:record {id:text; status:text; associated_driver:opt text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createItem: (record {name:text; description:text; category:text; image:text}, text) -> (variant {Ok:record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createReserveDistributorPay: (text) -> (variant {Ok:record {status:text; distributorReciever:principal; memo:nat64; ProcessorId:text; price:nat64; processorPayer:principal; paid_at_block:opt nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createReserveDriverPay: (text, nat64) -> (variant {Ok:record {status:text; memo:nat64; driverReciever:principal; DistributorId:text; price:nat64; paid_at_block:opt nat64; distributorPayer:principal}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createVehicle: (record {vehicleMake:text; vehicleType:text; vehicleRegNo:text; vehicleModel:text}, text) -> (variant {Ok:record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createWarehouseManager: (record {company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; fullName:text; contact_info:record {email:text; address:text; phone:text}}) -> (variant {Ok:record {id:text; status:text; company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; itemSuccesfullWarehoused:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; owner:principal; role:text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    getAcceptedDeliveryDetailsInDistributorsCompany: (text) -> (vec record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}) query;
    getAcceptedDeliveryTender: () -> (variant {Ok:vec record {id:text; additionalCost:nat64; tenderDescription:text; warehouseManagerId:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getAcceptedDeliveryTendersForDistributorCompany: (text) -> (vec record {id:text; additionalCost:nat64; tenderDescription:text; warehouseManagerId:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}) query;
    getActiveDeliveryDetails: () -> (vec record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}) query;
    getAddressFromPrincipal: (principal) -> (text) query;
    getAdmin: (text) -> (variant {Ok:record {id:text; status:text; company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; pickedUpItems:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; owner:principal; organisationItems:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; role:text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getAdminByOwner: () -> (variant {Ok:record {id:text; status:text; company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; pickedUpItems:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; owner:principal; organisationItems:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; role:text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getAdminProcessingAdvert: (text) -> (variant {Ok:record {id:text; status:text; itemId:text; warehouseManagerId:text; adminPaid:bool; quantity:nat64; adminId:text; price:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getAdminProcessingAdvertCompletedForAdmin: (text) -> (vec record {id:text; status:text; itemId:text; warehouseManagerId:text; adminPaid:bool; quantity:nat64; adminId:text; price:nat64}) query;
    getAdminProcessingAdvertsApprovedByWarehouseManager: (text) -> (vec record {id:text; status:text; itemId:text; warehouseManagerId:text; adminPaid:bool; quantity:nat64; adminId:text; price:nat64}) query;
    getAdminProcessingAdvertsApprovedForAdmin: (text) -> (vec record {id:text; status:text; itemId:text; warehouseManagerId:text; adminPaid:bool; quantity:nat64; adminId:text; price:nat64}) query;
    getAdminProcessingAdvertsOfAdmin: (text) -> (vec record {id:text; status:text; itemId:text; warehouseManagerId:text; adminPaid:bool; quantity:nat64; adminId:text; price:nat64}) query;
    getAdminProcessingAdvertsOfItem: (text) -> (vec record {id:text; status:text; itemId:text; warehouseManagerId:text; adminPaid:bool; quantity:nat64; adminId:text; price:nat64}) query;
    getAdminProcessingAdvertsOfWarehouseManager: (text) -> (vec record {id:text; status:text; itemId:text; warehouseManagerId:text; adminPaid:bool; quantity:nat64; adminId:text; price:nat64}) query;
    getAllAdminProcessingAdverts: () -> (variant {Ok:vec record {id:text; status:text; itemId:text; warehouseManagerId:text; adminPaid:bool; quantity:nat64; adminId:text; price:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getAllAdmins: () -> (variant {Ok:vec record {id:text; status:text; company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; pickedUpItems:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; owner:principal; organisationItems:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; role:text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getAllDeliveryDetails: () -> (variant {Ok:vec record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getAllDeliveryTenders: () -> (variant {Ok:vec record {id:text; additionalCost:nat64; tenderDescription:text; warehouseManagerId:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getAllDistributorsCompany: () -> (variant {Ok:vec record {id:text; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; completeItemsDistribution:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getAllDrivers: () -> (variant {Ok:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getAllFieldWorkers: () -> (variant {Ok:vec record {id:text; status:text; associated_driver:opt text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getAllItems: () -> (variant {Ok:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getAllVehicles: () -> (variant {Ok:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getAllWarehouseManagers: () -> (variant {Ok:vec record {id:text; status:text; company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; itemSuccesfullWarehoused:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; owner:principal; role:text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getCompleteItemsDistributionInDistributorCompany: (text) -> (vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}) query;
    getCompletedAdminProcessingAdverts: () -> (vec record {id:text; status:text; itemId:text; warehouseManagerId:text; adminPaid:bool; quantity:nat64; adminId:text; price:nat64}) query;
    getCompletedDeliveryDetailsForDistributorCompany: (text) -> (vec record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}) query;
    getCompletedDeliveryDetailsForDriver: (text) -> (vec record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}) query;
    getCompletedDeliveryDetailsForWarehouseManager: (text) -> (vec record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}) query;
    getCompletedDeliveryDetailsInDistributorsCompany: (text) -> (vec record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}) query;
    getDeliveryDetails: (text) -> (variant {Ok:record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDeliveryDetailsAssignedToDriver: (text) -> (vec record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}) query;
    getDeliveryDetailsPickedUp: (text) -> (vec record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}) query;
    getDeliveryDetailsPickedUpForDistributorCompany: (text) -> (vec record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}) query;
    getDeliveryTender: (text) -> (variant {Ok:record {id:text; additionalCost:nat64; tenderDescription:text; warehouseManagerId:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDeliveryTendersOfDistributorCompany: (text) -> (vec record {id:text; additionalCost:nat64; tenderDescription:text; warehouseManagerId:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}) query;
    getDeliveryTendersOfWarehouseManager: (text) -> (vec record {id:text; additionalCost:nat64; tenderDescription:text; warehouseManagerId:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}) query;
    getDistributorsCompany: (text) -> (variant {Ok:record {id:text; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; completeItemsDistribution:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDistributorsCompanyByOwner: () -> (variant {Ok:record {id:text; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; completeItemsDistribution:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriver: (text) -> (variant {Ok:record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriverActiveDelivery: (text) -> (variant {Ok:record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriverByOwner: () -> (variant {Ok:record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriverByOwnerFilter: () -> (variant {Ok:record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriverCompleteDelivery: (text) -> (variant {Ok:record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getDriversInDistributorCompany: (text) -> (vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}) query;
    getFieldWorker: (text) -> (variant {Ok:record {id:text; status:text; associated_driver:opt text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getFieldWorkerByOwner: () -> (variant {Ok:record {id:text; status:text; associated_driver:opt text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getGradedItemsForOwner: (text) -> (variant {Ok:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getItemById: (text) -> (variant {Ok:record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getItemsSuccesfulWarehousing: (text) -> (vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}) query;
    getNewDeliveryDetailsForWarehouseManager: (text) -> (vec record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}) query;
    getNewDeliveryDetailsInDistributorsCompany: (text) -> (vec record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}) query;
    getNewItemsForOwner: (text) -> (variant {Ok:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getPackagedItemsForOwner: (text) -> (variant {Ok:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getPaidAdminProcessingAdverts: () -> (vec record {id:text; status:text; itemId:text; warehouseManagerId:text; adminPaid:bool; quantity:nat64; adminId:text; price:nat64}) query;
    getRecentDeliveryDetailsAssignedToDriver: (text) -> (variant {Ok:record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getTenderForDeliveryDetailsForDistributorCompany: (text, text) -> (variant {Ok:record {id:text; additionalCost:nat64; tenderDescription:text; warehouseManagerId:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getTenderForDeliveryDetailsForWarehouseManager: (text, text) -> (variant {Ok:record {id:text; additionalCost:nat64; tenderDescription:text; warehouseManagerId:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getTenderedDeliveryDetailsForWarehouseManager: (text) -> (vec record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}) query;
    getTenderedDeliveryDetailsInDistributorsCompany: (text) -> (vec record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}) query;
    getVehicle: (text) -> (variant {Ok:record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getVehiclesByDistributorCompany: (text) -> (variant {Ok:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getVehiclesInDistributorCompany: (text) -> (vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}) query;
    getWarehouseManager: (text) -> (variant {Ok:record {id:text; status:text; company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; itemSuccesfullWarehoused:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; owner:principal; role:text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getWarehouseManagerByOwner: () -> (variant {Ok:record {id:text; status:text; company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; itemSuccesfullWarehoused:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; owner:principal; role:text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getWarehousePaidItems: (text) -> (vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}) query;
    gradeItem: (record {itemId:text; grade:text; quantity:nat64}) -> (variant {Ok:record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    markAdminProcessingAdvertAsAdminPaid: (text) -> (variant {Ok:record {id:text; status:text; itemId:text; warehouseManagerId:text; adminPaid:bool; quantity:nat64; adminId:text; price:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    markAdminProcessingAdvertAsApproved: (text) -> (variant {Ok:record {id:text; status:text; itemId:text; warehouseManagerId:text; adminPaid:bool; quantity:nat64; adminId:text; price:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    markDeliveryDetailsAsCompleted: (text) -> (variant {Ok:record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    markDeliveryDetailsAsPicked: (text) -> (variant {Ok:record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    markItemAsPickedUp: (text) -> (variant {Ok:record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    markItemAsWarehousePaid: (text) -> (variant {Ok:record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateAdmin: (text, record {company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; fullName:text; contact_info:record {email:text; address:text; phone:text}}) -> (variant {Ok:record {id:text; status:text; company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; pickedUpItems:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; owner:principal; organisationItems:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; role:text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateAdminProcessingAdvert: (text, record {itemId:text; warehouseManagerId:text; quantity:nat64; adminId:text; price:nat64}) -> (variant {Ok:record {id:text; status:text; itemId:text; warehouseManagerId:text; adminPaid:bool; quantity:nat64; adminId:text; price:nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateDeliveryDate: (text, text) -> (variant {Ok:record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateDeliveryDetails: (text, record {itemId:text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text}) -> (variant {Ok:record {id:text; itemId:text; driverId:opt text; deliveryDescription:text; warehouseManagerId:text; distributorsId:text; deliveryStatus:text; deliveryPriority:text; pickupDate:text; deliveredRegion:text; pickupRegion:text; adminId:text; deliveredDate:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateDeliveryTender: (text, record {additionalCost:nat64; tenderDescription:text; warehouseManagerId:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; costPerWeight:nat64; tenderTitle:text}) -> (variant {Ok:record {id:text; additionalCost:nat64; tenderDescription:text; warehouseManagerId:text; distributorsId:text; deliveryWeight:nat64; totalCost:nat64; DeliveryDetailsId:text; costPerWeight:nat64; accepted:bool; tenderTitle:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateDistributorsCompany: (text, record {YearsInOperation:text; logo:text; name:text; email:text; marketCoverage:text; address:text; phone:text; regNo:text; bussinessType:text}) -> (variant {Ok:record {id:text; YearsInOperation:text; transportationFleet:vec record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; owner:principal; logo:text; name:text; email:text; marketCoverage:text; drivers:vec record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; address:text; phone:text; completeItemsDistribution:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; regNo:text; bussinessType:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateDriver: (text, record {contact:text; fullName:text; experience:text; licenseNo:text; licenseExpiry:text}) -> (variant {Ok:record {id:text; contact:text; driverRating:nat64; owner:principal; fullName:text; qualifications:vec text; experience:text; driverStatus:text; licenseNo:text; assignedCompany:bool; assignedVehicle:opt record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; licenseExpiry:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateFieldWorker: (text, record {status:text; associated_driver:opt text; fullName:text; contact_info:record {email:text; address:text; phone:text}}) -> (variant {Ok:record {id:text; status:text; associated_driver:opt text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateItem: (text, record {name:text; description:text; category:text; image:text}) -> (variant {Ok:record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateVehicle: (text, record {vehicleMake:text; vehicleType:text; vehicleRegNo:text; vehicleModel:text}) -> (variant {Ok:record {id:text; vehicleMake:text; vehicleType:text; owner:text; vehicleRegNo:text; vehicleModel:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateWarehouseManager: (text, record {company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; fullName:text; contact_info:record {email:text; address:text; phone:text}}) -> (variant {Ok:record {id:text; status:text; company_records:record {YearsInOperation:text; logo:text; name:text; email:text; address:text; phone:text; regNo:text; bussinessType:text}; itemSuccesfullWarehoused:vec record {id:text; status:text; warehousedSuccesful:bool; owner:text; packaged:bool; name:text; description:text; warehousePaid:bool; pickedUp:bool; grade:text; packagedDetails:opt record {packagingDate:text; packagingSize:text; packagingType:text; packagingMaterial:text; packagingColor:text}; quantity:nat64; category:text; image:text; distributionSuccesful:bool; expiration_date:opt text}; owner:principal; role:text; fullName:text; contact_info:record {email:text; address:text; phone:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    verifyPayment: (principal, nat64, nat64, nat64) -> (bool) query;
}
